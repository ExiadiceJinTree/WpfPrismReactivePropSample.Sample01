<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             x:Class="Sample01.Views.ViewUsrCtrlC"             
             prism:ViewModelLocator.AutoWireViewModel="True">
    <Grid Margin="5">
        <StackPanel HorizontalAlignment="Center">
            <Label Content="画面UserControlC" FontSize="50"/>
            <StackPanel Orientation="Horizontal">
                <ListBox x:Name="MyAListBox" Height="100" Width="200" Margin="10"
                         ItemsSource="{Binding MyListBox}" SelectedItem="{Binding SelectedMyAListBoxItem}">
                    <ListBox.Template>
                        <ControlTemplate TargetType="{x:Type ItemsControl}">
                            <Border BorderThickness="5" BorderBrush="Black" Background="Cyan">
                                <ItemsPresenter Margin="10" />
                            </Border>
                        </ControlTemplate>
                    </ListBox.Template>
                </ListBox>
                <StackPanel Margin="5">
                    <ListBox x:Name="MyBListBox" Height="30" Width="200" Margin="5"
                             ItemsSource="{Binding MyListBox}" SelectedItem="{Binding SelectedMyBListBoxItem}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <ListBox x:Name="MyCListBox" Height="65" Width="200" Margin="5"
                             ItemsSource="{Binding MyListBox}" SelectedItem="{Binding SelectedMyCListBoxItem}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Plum" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </StackPanel>
            </StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ComboBox Grid.Row="0" Grid.Column="0"
                          x:Name="AAreasComboBox" Width="200"
                          ItemsSource="{Binding Areas}" SelectedValuePath="Value" DisplayMemberPath="Name"
                          SelectedItem="{Binding SelectedAArea}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <prism:InvokeCommandAction Command="{Binding AAreasComboBox_SelectionChangedCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Label Grid.Row="0" Grid.Column="1" Content="{Binding SelectedAAreaInfo}"/>
                <ComboBox Grid.Row="1" Grid.Column="0"
                          x:Name="BAreasComboBox" Width="200"
                          ItemsSource="{Binding Areas}" SelectedItem="{Binding SelectedBArea}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="5">
                                <Run Text="Value:"/><Run Text="{Binding Value}"/><LineBreak/>
                                <Run Text="Name:"/><Run Text="{Binding Name}" FontSize="15px"/>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <WrapPanel Margin="10">
                <!--Buttonを普通にCommandプロパティでバインドした場合は、DelegateCommand<T>のパラメータはnullになってしまいイベントパラメータは利用できない。-->
                <Button x:Name="TestAButton" Content="TestA" Width="75" Command="{Binding TestACmd}"/>
                <!--Buttonをprism:InvokeCommandActionのCommandプロパティでバインドした場合は、DelegateCommand<T>のパラメータにはイベントパラメータが渡ってきて利用できる。-->
                <Button x:Name="TestBButton" Content="TestB" Width="75">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <prism:InvokeCommandAction Command="{Binding TestBCmd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </WrapPanel>
        </StackPanel>
    </Grid>
</UserControl>
